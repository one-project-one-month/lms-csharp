// <auto-generated />
using System;
using LearningManagementSystem.DataBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningManagementSystem.DataBase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblAdmins", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblCourses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<decimal>("current_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("duration")
                        .HasColumnType("datetime");

                    b.Property<int>("instructor_id")
                        .HasColumnType("int");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<ulong>("is_available")
                        .HasColumnType("bit");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("original_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("thumbnail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("category_id");

                    b.HasIndex("instructor_id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblEnrollments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("completed_date")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("enrollment_date")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<ulong>("is_completed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("course_id");

                    b.HasIndex("user_id");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblInstructors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("edu_background")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("nrc")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblLessons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<ulong>("is_available")
                        .HasColumnType("bit");

                    b.Property<string>("lessonDetail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("videoUrl")
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("course_id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblRoles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblSocial_Links", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("X")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("facebook")
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("phone")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("telegram")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("course_id")
                        .IsUnique();

                    b.ToTable("Social_Links");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblStudents", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblTokens", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblUsers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("dob")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<ulong>("is_available")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("profile_photo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id");

                    b.HasIndex("role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblAdmins", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblUsers", "TblUser")
                        .WithOne("TblAdmin")
                        .HasForeignKey("LearningManagementSystem.DataBase.Models.TblAdmins", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblCourses", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblCategory", "TblCategory")
                        .WithMany("TblCourses")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearningManagementSystem.DataBase.Models.TblInstructors", "TblInstructor")
                        .WithMany("TblCourses")
                        .HasForeignKey("instructor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblCategory");

                    b.Navigation("TblInstructor");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblEnrollments", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblCourses", "TblCourse")
                        .WithMany("TblEnrollments")
                        .HasForeignKey("course_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LearningManagementSystem.DataBase.Models.TblUsers", "TblUser")
                        .WithMany("TblEnrollments")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TblCourse");

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblInstructors", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblUsers", "TblUser")
                        .WithOne("TblInstructor")
                        .HasForeignKey("LearningManagementSystem.DataBase.Models.TblInstructors", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblLessons", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblCourses", "TblCourse")
                        .WithMany("TblLessons")
                        .HasForeignKey("course_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblCourse");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblSocial_Links", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblCourses", "TblCourse")
                        .WithOne("TblSocial_Link")
                        .HasForeignKey("LearningManagementSystem.DataBase.Models.TblSocial_Links", "course_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblCourse");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblStudents", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblUsers", "TblUser")
                        .WithOne("TblStudent")
                        .HasForeignKey("LearningManagementSystem.DataBase.Models.TblStudents", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblTokens", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblUsers", "TblUser")
                        .WithOne("Tokens")
                        .HasForeignKey("LearningManagementSystem.DataBase.Models.TblTokens", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUser");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblUsers", b =>
                {
                    b.HasOne("LearningManagementSystem.DataBase.Models.TblRoles", "TblRole")
                        .WithMany("TblUsers")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TblRole");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblCategory", b =>
                {
                    b.Navigation("TblCourses");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblCourses", b =>
                {
                    b.Navigation("TblEnrollments");

                    b.Navigation("TblLessons");

                    b.Navigation("TblSocial_Link");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblInstructors", b =>
                {
                    b.Navigation("TblCourses");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblRoles", b =>
                {
                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("LearningManagementSystem.DataBase.Models.TblUsers", b =>
                {
                    b.Navigation("TblAdmin");

                    b.Navigation("TblEnrollments");

                    b.Navigation("TblInstructor");

                    b.Navigation("TblStudent");

                    b.Navigation("Tokens")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
